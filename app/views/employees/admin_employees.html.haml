:css
	.btn{
		color: #fff !important;
	}
	.fixed-table-loading, .no-records-found{
		display: none !important;
	}

:javascript
	$(function(){
		$('.table th:last').remove();
		$('.table th:last').get(0).colSpan = 2;
		$('.table th:last').get(0).style.textAlign = 'center';
	});

	$(function(){
		$('.fixed-table-loading').hide();
		$('.suggestion-search').keyup(function(e){
			var key = e.target.value.toLowerCase();
			if(key==""){
				$('.table tr').show();
			}
			$('.table tr:gt(0)').each(function(){
				if($($(this).children().get(0)).text().toLowerCase().indexOf(key)==-1){
					$(this).hide();
				}
			});
		});
	});

.container
	.row.relative
		.table-responsive{style: "position: relative;"}
			%div
				%h3.text-center Employees
				.well
					- if current_user.admin?
						%div{style: "position: absolute; right: 0;"}
							=link_to 'Import Employees', import_employees_path, class: 'btn btn-primary btn-sm pull-right', style: "margin-right: 10px;"
					%div
						Search:
						%input.suggestion-search{:placeholder => "Search...", :type => "text"}/
						&nbsp;&nbsp;&nbsp; Count of Employees:
						- if current_user.admin?
							%span#lovedones=@employees.count

				%table.table.table-striped.table-bordered.table-hover{"data-sort-name" => "name", "data-sort-order" => "asc", "data-toggle" => "table"}
					%thead
						%tr.bg-success
							%th{"data-field" => "name", "data-sortable" => "true", "data-sorter"=>"stringSorter"} Name
							%th{"data-field" => "username", "data-sortable" => "true", "data-sorter"=>"stringSorter"} Username
							%th{"data-field" => "service_provider", "data-sortable" => "true", "data-sorter"=>"stringSorter"} Service Provider
							%th{"data-field" => "street", "data-sortable" => "true", "data-sorter"=>"stringSorter"} Address
							-#%th{"data-field" => "city", "data-sortable" => "true", "data-sorter"=>"stringSorter"} City
							%th{"data-field" => "county", "data-sortable" => "true", "data-sorter"=>"stringSorter"} County
							%th{"data-field" => "state", "data-sortable" => "true", "data-sorter"=>"stringSorter"} State
							-#%th{"data-field" => "zip_code", "data-sortable" => "true", "data-sorter"=>"stringSorter"} Zip Code
							%th{"data-field" => "date_time", "data-sortable" => "true"} Date/Time Created
							-#%th{"data-field" => "csv_imported", "data-sortable" => "true"} Imported by CSV
							%th{"data-field" => "edit-link"} Actions
							%th{"data-field" => "delete-link"} Actions
					%tbody
						- if current_user.admin?
							- @employees.order('last_name ASC').each do |employee|
								%tr
									%td= employee.name
									%td= employee.username
									%td= employee.company.try(:company_name)
									%td= employee.address
									-#%td= employee.city
									%td= employee.county
									%td= employee.state
									-#%td= employee.zip
									%td= employee.created_at.strftime("%m/%d/%Y %H:%M")
									-#- if employee.csv_imported
									-#	%td Yes
									-#- else
									-#	%td No
									%td
										= link_to edit_company_employee_path(employee.company, employee), class: "btn btn-success	btn-xs" do
											%i.glyphicon.glyphicon-edit Â Edit
									%td
										= link_to "Delete", company_employee_path(employee.company, employee), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-success btn-xs"
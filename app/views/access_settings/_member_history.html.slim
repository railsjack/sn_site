- if audits.present?
  br
  .scroll
    - audits.each do |audit|
      - audit_type = audit.auditable_type
      - audit_action = audit.action
      - audit_created = audit.created_at
      - audit_changes = audit.audited_changes
      - unless audit_type.eql?('User')
        - audit_object = audit_type.constantize.with_deleted.find(audit.auditable_id)

      / ***************************************************************************** CREATED LOGS ***************************************************************************** /
      - if audit_action.eql?('create')
        / ---------------------- USER ---------------------- /
        - if audit_type.eql?('User')
          p.text-warning
            span= audit_created.strftime('%m-%d-%Y %I:%M %p')
            span
              b= ": Created by #{audit.user.company.try(:contact_name)}"

        / ---------------------- SCHEDULER ---------------------- /
        - elsif audit_type.eql?('Scheduler')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-warning Schedule Created
          p.col-md-offset-1.text-warning.well
            = content_tag(:b, "Employee: ", class: 'created-title-color') + '' + audit_object.employee.full_name + ', ' + content_tag(:b, "Loved One: ", class: 'created-title-color') + '' + audit_object.lovedone.full_name + ', ' + content_tag(:b, "Date/Time: ", class: 'created-title-color') + '' + audit_changes['start_time'].in_time_zone(Time.zone).strftime('%m-%d-%Y %I:%M %p') + ' - ' + audit_changes['end_time'].in_time_zone(Time.zone).strftime('%I:%M %p')

        / ---------------------- EMPLOYEE ---------------------- /
        - elsif audit_type.eql?('Employee')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-warning Employee Created
          p.col-md-offset-1.text-warning.well
            - audit_changes.keys.each_with_index do |key, index|
              - unless audit_changes[key].eql? ''
                - if key.eql? 'designation_id'
                  = content_tag(:b, key.titleize, class: 'created-title-color') + ': ' + Designation.with_deleted.find(audit_changes[key]).name
                - else
                  = content_tag(:b, key.titleize, class: 'created-title-color') + ': ' + audit_changes[key]
                - unless audit_changes.keys.count-1 <= index
                  = ", "

        / ---------------------- LOVED ONE ---------------------- /
        - elsif audit_type.eql?('Lovedone')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-warning Loved One Created
          p.col-md-offset-1.text-warning.well
            - audit_changes.keys.each_with_index do |key, index|
              - unless audit_changes[key].eql? ''
                = content_tag(:b, key.titleize, class: 'created-title-color') + ': '
                - if key.eql?('date_of_birth')
                  = Date.strptime(audit_changes[key], '%m/%d/%Y').strftime('%m-%d-%Y')
                - elsif key.eql?('gender')
                  - if audit_changes[key].eql? 'true'
                    |Male
                  - elsif audit_changes[key].eql? 'false'
                    |Female
                - else
                  = audit_changes[key]
                - unless audit_changes.keys.count-1 <= index
                  = ", "

        / ---------------------- FOLLOWER ---------------------- /
        - elsif audit_type.eql?('Follower')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-warning Follower Created
          p.col-md-offset-1.text-warning.well
            - audit_changes.keys.each_with_index do |key, index|
              - unless audit_changes[key].eql? ''
                - if key.eql? 'lovedone_id'
                  = content_tag(:b, 'Loved One', class: 'created-title-color') + ': ' + Lovedone.with_deleted.find(audit_changes[key]).full_name
                - else
                  = content_tag(:b, key.titleize, class: 'created-title-color') + ': ' + audit_changes[key]
                - unless audit_changes.keys.count-2 <= index
                  = ", "

      / ***************************************************************************** UPDATED LOGS ***************************************************************************** /
      - elsif audit_action.eql?('update') and audit.audited_changes.present?
        / ---------------------- USER ---------------------- /
        - if audit_changes.keys.include? 'last_sign_out_at' and audit_changes.keys.count < 5
          p.text-success.well
            span
              = audit_changes['last_sign_out_at'].second.in_time_zone(Time.zone).strftime('%m-%d-%Y %I:%M %p')
              b= ": Logout from #{audit.remote_address}"
        - elsif audit_changes.keys.include? 'current_sign_in_at' and audit_changes.keys.count < 7
          p.text-success.well
            span
              = audit_changes['current_sign_in_at'].second.in_time_zone(Time.zone).strftime('%m-%d-%Y %I:%M %p')
              b= ": Login from #{audit.remote_address}"

        / ---------------------- SCHEDULER ---------------------- /
        - elsif audit_type.eql?('Scheduler')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-info Schedule Updated
          p.col-md-offset-1.text-warning.well
            = content_tag(:b, "Employee: ", class: 'updated-title-color') + '' + audit_object.employee.full_name + ', ' + content_tag(:b, "Loved One: ", class: 'updated-title-color') + '' + audit_object.lovedone.full_name + ', ' + content_tag(:b, "Date: ", class: 'updated-title-color') + '' + audit_object.start_time.strftime('%m-%d-%Y')
            - audit_changes.keys.each do |key|
              = ', '
              = content_tag(:b, key.titleize, class: 'updated-title-color') + ' changed from ' + content_tag(:b, audit_changes[key].first.in_time_zone(Time.zone).strftime('%I:%M %p')) + ' to ' + content_tag(:b, audit_changes[key].second.in_time_zone(Time.zone).strftime('%I:%M %p'))

        / ---------------------- EMPLOYEE ---------------------- /
        - elsif audit_type.eql?('Employee')
          - checked_audit_changes = check_audit_changes(audit_changes)
          - audit_changes = checked_audit_changes.first
          - value_exist = checked_audit_changes.second
          - if value_exist
            p.col-md-offset-1.text-warning.display-inline
              = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
              h4.display-inline
                label.label.label-info Employee Updated
            p.col-md-offset-1.text-warning.well
              = content_tag(:b, "Name: ", class: 'updated-title-color') + '' + audit_object.full_name
              - audit_changes.keys.each do |key|
                = ', '
                - if key.eql? 'designation_id'
                  = content_tag(:b, key.titleize, class: 'updated-title-color') + ' changed from ' + content_tag(:b, Designation.with_deleted.find(audit_changes[key].first).name) + ' to ' + content_tag(:b, Designation.with_deleted.find(audit_changes[key].second).name)
                - else
                  = content_tag(:b, key.titleize, class: 'updated-title-color') + ' changed from ' + content_tag(:b, audit_changes[key].first.present? ? audit_changes[key].first : 'blank' ) + ' to ' + content_tag(:b, audit_changes[key].second.present? ? audit_changes[key].second : 'blank')

        / ---------------------- LOVED ONE ---------------------- /
        - elsif audit_type.eql?('Lovedone')
          - checked_audit_changes = check_audit_changes(audit_changes)
          - audit_changes = checked_audit_changes.first
          - value_exist = checked_audit_changes.second
          - if value_exist
            p.col-md-offset-1.text-warning.display-inline
              = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
              h4.display-inline
                label.label.label-info Loved One Updated
            p.col-md-offset-1.text-warning.well
              = content_tag(:b, "Name: ", class: 'updated-title-color') + '' + audit_object.full_name + ', '
              - audit_changes.keys.each_with_index do |key, index|
                - unless audit_changes[key].eql? ''
                  = content_tag(:b, key.titleize, class: 'updated-title-color') + ' changed from '
                  - if key.eql?('date_of_birth')
                    = content_tag(:b, Date.strptime(audit_changes[key].first, '%m/%d/%Y').strftime('%m-%d-%Y')) + ' to ' + content_tag(:b, Date.strptime(audit_changes[key].second, '%m/%d/%Y').strftime('%m-%d-%Y'))
                  - elsif key.eql?('gender')
                    - if audit_changes[key].first.eql? 'true'
                      = content_tag(:b, "Male") + ' to ' + content_tag(:b, "Female")
                    - elsif audit_changes[key].first.eql? 'false'
                      = content_tag(:b, "Female") + ' to ' + content_tag(:b, "Male")
                  - else
                    = content_tag(:b, audit_changes[key].first.present? ? audit_changes[key].first : 'blank' ) + ' to ' + content_tag(:b, audit_changes[key].second.present? ? audit_changes[key].second : 'blank')
                  - unless audit_changes.keys.count-1 <= index
                    = ", "

        / ---------------------- FOLLOWER ---------------------- /
        - elsif audit_type.eql?('Follower')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-info Follower Updated
          p.col-md-offset-1.text-warning.well
            = content_tag(:b, "Name: ", class: 'updated-title-color') + '' +  audit_object.full_name + ', follower of ' + content_tag(:b, audit_object.lovedone.full_name)
            - audit_changes.keys.each do |key|
              = ', '
              = content_tag(:b, key.titleize, class: 'updated-title-color') + ' changed from ' + content_tag(:b, audit_changes[key].first.present? ? audit_changes[key].first : 'blank') + ' to ' + content_tag(:b, audit_changes[key].second.present? ? audit_changes[key].second : 'blank')

      / ***************************************************************************** DELETED LOGS ***************************************************************************** /
      - elsif audit_action.eql?('destroy') and audit_changes.present?

        / ---------------------- SCHEDULER ---------------------- /
        - if audit_type.eql?('Scheduler') and audit_object.start_time >= audit_created
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-danger Schedule Deleted
          p.col-md-offset-1.text-danger.well
            = content_tag(:b, "Employee: ") + '' + audit_object.employee.full_name + ', ' + content_tag(:b, "Loved One: ") + '' + audit_object.lovedone.full_name + ', ' + content_tag(:b, "Date/Time: ") + '' + audit_object.start_time.strftime('%m-%d-%Y %I:%M %p') + ' - ' + audit_object.end_time.strftime('%I:%M %p')

        / ---------------------- EMPLOYEE ---------------------- /
        - elsif audit_type.eql?('Employee')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-danger Employee Deleted
          p.col-md-offset-1.text-danger.well
            = content_tag(:b, "Name: ") + '' + audit_object.full_name

        / ---------------------- LOVED ONE ---------------------- /
        - elsif audit_type.eql?('Lovedone')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-danger Loved One Deleted
          p.col-md-offset-1.text-danger.well
            = content_tag(:b, "Name: ") + '' + audit_object.full_name

        / ---------------------- FOLLOWER ---------------------- /
        - elsif audit_type.eql?('Follower')
          p.col-md-offset-1.text-warning.display-inline
            = "#{audit_created.strftime('%m-%d-%Y %I:%M %p')}: "
            h4.display-inline
              label.label.label-danger Follower Deleted
          p.col-md-offset-1.text-danger.well
            = content_tag(:b, "Name: ") + '' +  audit_object.full_name + ', follower of ' + content_tag(:b, audit_object.lovedone.full_name)

- else
  br
  p.text-center.text-danger No Logs Available for Selected Date